/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { DAO, DAOInterface } from "../../contracts/DAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalhash",
        type: "bytes32",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noofproposals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalhashlist",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "proposalnamehash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesYes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesNo",
        type: "uint256",
      },
      {
        internalType: "enum DAO.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalnamehash",
        type: "bytes32",
      },
      {
        internalType: "enum DAO.Side",
        name: "side",
        type: "uint8",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "votes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019e0380380620019e08339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b6117c980620002176000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063c9a28cb911610066578063c9a28cb91461023c578063ce7c2ac214610258578063f2fde38b14610288578063f96dae0a146102a4576100ea565b8063715018a6146101f85780638da5cb5b14610202578063b6b55f2514610220576100ea565b80632e1a7d4d116100c85780632e1a7d4d1461015957806332ed5b12146101755780633a98ef39146101aa57806340656aef146101c8576100ea565b80631a52db3e146100ef5780631db5ade81461010d5780632542bf061461013d575b600080fd5b6100f76102c2565b6040516101049190610e22565b60405180910390f35b61012760048036038101906101229190610ed6565b6102c8565b6040516101349190610f31565b60405180910390f35b61015760048036038101906101529190610f4c565b6102f7565b005b610173600480360381019061016e9190610fa5565b61052f565b005b61018f600480360381019061018a9190610f4c565b6106c4565b6040516101a196959493929190611067565b60405180910390f35b6101b261072d565b6040516101bf9190610e22565b60405180910390f35b6101e260048036038101906101dd9190610fa5565b610733565b6040516101ef91906110c8565b60405180910390f35b610200610757565b005b61020a61076b565b60405161021791906110e3565b60405180910390f35b61023a60048036038101906102359190610fa5565b610794565b005b61025660048036038101906102519190611123565b6108a9565b005b610272600480360381019061026d9190611163565b610bfe565b60405161027f9190610e22565b60405180910390f35b6102a2600480360381019061029d9190611163565b610c16565b005b6102ac610c99565b6040516102b991906111ef565b60405180910390f35b60035481565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b678ac7230489e80000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610381576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037890611267565b60405180910390fd5b6000801b6001600083815260200190815260200160002060010154146103dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d3906112d3565b60405180910390fd5b60028190806001815401808255809150506001900390600052602060002001600090919091909150556001600360008282546104189190611322565b925050819055506040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200142815260200160008152602001600081526020016000600281111561047457610473610ff0565b5b8152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083600281111561052457610523610ff0565b5b021790555090505050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a8906113a2565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461060091906113c2565b92505081905550806006600082825461061991906113c2565b92505081905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161067d9291906113f6565b6020604051808303816000875af115801561069c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c0919061144b565b5050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b60065481565b6002818154811061074357600080fd5b906000526020600020016000915090505481565b61075f610cbf565b6107696000610d3d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107e39190611322565b9250508190555080600660008282546107fc9190611322565b92505081905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161086293929190611478565b6020604051808303816000875af1158015610881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a5919061144b565b5050565b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff1615151461094d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610944906114fb565b60405180910390fd5b60006001600084815260200190815260200160002090506000801b8160010154036109ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a490611567565b60405180910390fd5b62093a8081600201546109c09190611322565b421115610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f9906115d3565b60405180910390fd5b6001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff02191690831515021790555060006001811115610a7f57610a7e610ff0565b5b826001811115610a9257610a91610ff0565b5b03610b4a57600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816003016000828254610aea9190611322565b92505081905550603260065460648360030154610b0791906115f3565b610b119190611664565b1115610b455760018160050160006101000a81548160ff02191690836002811115610b3f57610b3e610ff0565b5b02179055505b610bf9565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816004016000828254610b9d9190611322565b92505081905550603260065460648360040154610bba91906115f3565b610bc49190611664565b1115610bf85760028160050160006101000a81548160ff02191690836002811115610bf257610bf1610ff0565b5b02179055505b5b505050565b60056020528060005260406000206000915090505481565b610c1e610cbf565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8490611707565b60405180910390fd5b610c9681610d3d565b50565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cc7610e01565b73ffffffffffffffffffffffffffffffffffffffff16610ce561076b565b73ffffffffffffffffffffffffffffffffffffffff1614610d3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3290611773565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b610e1c81610e09565b82525050565b6000602082019050610e376000830184610e13565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6d82610e42565b9050919050565b610e7d81610e62565b8114610e8857600080fd5b50565b600081359050610e9a81610e74565b92915050565b6000819050919050565b610eb381610ea0565b8114610ebe57600080fd5b50565b600081359050610ed081610eaa565b92915050565b60008060408385031215610eed57610eec610e3d565b5b6000610efb85828601610e8b565b9250506020610f0c85828601610ec1565b9150509250929050565b60008115159050919050565b610f2b81610f16565b82525050565b6000602082019050610f466000830184610f22565b92915050565b600060208284031215610f6257610f61610e3d565b5b6000610f7084828501610ec1565b91505092915050565b610f8281610e09565b8114610f8d57600080fd5b50565b600081359050610f9f81610f79565b92915050565b600060208284031215610fbb57610fba610e3d565b5b6000610fc984828501610f90565b91505092915050565b610fdb81610e62565b82525050565b610fea81610ea0565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106110305761102f610ff0565b5b50565b60008190506110418261101f565b919050565b600061105182611033565b9050919050565b61106181611046565b82525050565b600060c08201905061107c6000830189610fd2565b6110896020830188610fe1565b6110966040830187610e13565b6110a36060830186610e13565b6110b06080830185610e13565b6110bd60a0830184611058565b979650505050505050565b60006020820190506110dd6000830184610fe1565b92915050565b60006020820190506110f86000830184610fd2565b92915050565b6002811061110b57600080fd5b50565b60008135905061111d816110fe565b92915050565b6000806040838503121561113a57611139610e3d565b5b600061114885828601610ec1565b92505060206111598582860161110e565b9150509250929050565b60006020828403121561117957611178610e3d565b5b600061118784828501610e8b565b91505092915050565b6000819050919050565b60006111b56111b06111ab84610e42565b611190565b610e42565b9050919050565b60006111c78261119a565b9050919050565b60006111d9826111bc565b9050919050565b6111e9816111ce565b82525050565b600060208201905061120460008301846111e0565b92915050565b600082825260208201905092915050565b7f6e6f7420656e6f7567682073686172657320746f206372656174652000000000600082015250565b6000611251601c8361120a565b915061125c8261121b565b602082019050919050565b6000602082019050818103600083015261128081611244565b9050919050565b7f50726f706f73616c20416c726561647920457869747300000000000000000000600082015250565b60006112bd60168361120a565b91506112c882611287565b602082019050919050565b600060208201905081810360008301526112ec816112b0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061132d82610e09565b915061133883610e09565b92508282019050808211156113505761134f6112f3565b5b92915050565b7f6e6f7420656e6f75676820736861726573000000000000000000000000000000600082015250565b600061138c60118361120a565b915061139782611356565b602082019050919050565b600060208201905081810360008301526113bb8161137f565b9050919050565b60006113cd82610e09565b91506113d883610e09565b92508282039050818111156113f0576113ef6112f3565b5b92915050565b600060408201905061140b6000830185610fd2565b6114186020830184610e13565b9392505050565b61142881610f16565b811461143357600080fd5b50565b6000815190506114458161141f565b92915050565b60006020828403121561146157611460610e3d565b5b600061146f84828501611436565b91505092915050565b600060608201905061148d6000830186610fd2565b61149a6020830185610fd2565b6114a76040830184610e13565b949350505050565b7f416c726561647920566f74656400000000000000000000000000000000000000600082015250565b60006114e5600d8361120a565b91506114f0826114af565b602082019050919050565b60006020820190508181036000830152611514816114d8565b9050919050565b7f50726f706f73616c20446f6573206e6f74206578697374730000000000000000600082015250565b600061155160188361120a565b915061155c8261151b565b602082019050919050565b6000602082019050818103600083015261158081611544565b9050919050565b7f566f74696e6720506572696f64204f7665720000000000000000000000000000600082015250565b60006115bd60128361120a565b91506115c882611587565b602082019050919050565b600060208201905081810360008301526115ec816115b0565b9050919050565b60006115fe82610e09565b915061160983610e09565b925082820261161781610e09565b9150828204841483151761162e5761162d6112f3565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061166f82610e09565b915061167a83610e09565b92508261168a57611689611635565b5b828204905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006116f160268361120a565b91506116fc82611695565b604082019050919050565b60006020820190508181036000830152611720816116e4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061175d60208361120a565b915061176882611727565b602082019050919050565b6000602082019050818103600083015261178c81611750565b905091905056fea2646970667358221220722da3f84f047f3a792817219fcc786ab55968c76801794b5356fde8e73f65d264736f6c63430008110033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DAO> {
    return super.deploy(_token, overrides || {}) as Promise<DAO>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): DAO {
    return super.attach(address) as DAO;
  }
  override connect(signer: Signer): DAO__factory {
    return super.connect(signer) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new utils.Interface(_abi) as DAOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DAO {
    return new Contract(address, _abi, signerOrProvider) as DAO;
  }
}
